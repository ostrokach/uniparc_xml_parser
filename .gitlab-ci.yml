image: condaforge/linux-anvil:latest

stages:
  - build
  - test
  - deploy

# === Variables ===

variables:
  PACKAGE_VERSION: 0.1.1

# === Build ===

.conda_configure: &conda_configure
  before_script:
    # Cargo
    - curl https://sh.rustup.rs -sSf | sh
    - rustup self update
    - rustup update
    # Conda
    - conda config --append channels bioconda
    - conda config --append channels ostrokach-forge
    - case "${PACKAGE_VERSION}" in
      *dev*)
        conda config --append channels kimlab/label/dev;
        conda config --append channels kimlab;
        conda config --append channels ostrokach/label/dev;
        conda config --append channels ostrokach;
      ;;
      *)
        conda config --append channels kimlab;
        conda config --append channels ostrokach;
      ;;
      esac
    - conda update -yq conda

.build: &build
  stage: build
  <<: *conda_configure
  script:
    # Build conda packages
    - cd $CI_PROJECT_DIR/.conda
    - conda build .
    # Save built packages as artifacts
    - mkdir $CI_PROJECT_DIR/conda-bld
    - cp -r /opt/conda/conda-bld/{linux-64,noarch} $CI_PROJECT_DIR/conda-bld
  artifacts:
    paths:
    - conda-bld

build:
  <<: *build

# === Test ===

.test: &test
  stage: test
  script:
    # Conda install
    - cp -r $CI_PROJECT_DIR/conda-bld/* /opt/conda/conda-bld/
    - conda index /opt/conda/conda-bld/
    - conda install -yq --use-local ${CI_PROJECT_NAME}
    # Test
    - uniparc_xml_parser --help

test:
  <<: [*conda_configure, *test]
  dependencies:
    - build

# === Pages ===

.docs: &docs
  stage: test
  script:
    # Conda install
    - cp -r $CI_PROJECT_DIR/conda-bld/* /opt/conda/conda-bld/
    - conda index /opt/conda/conda-bld/
    - conda install -yq --use-local "python=$PYTHON_VERSION" $CI_PROJECT_NAME
    # Build docs
    - conda install -yq nbconvert ipython ipykernel pandoc
    - pip install -q sphinx sphinx_rtd_theme recommonmark nbsphinx
    - sphinx-build docs public

test-pages:
  <<: [*conda_configure, *docs]
  dependencies:
    - build
  except:
    - master
    - tags

pages:
  <<: [*conda_configure, *docs]
  dependencies:
    - build
  only:
    - master
    - tags
  except:
    - triggers
  artifacts:
    paths:
    - public

# === Deploy ===

.deploy: &deploy
  stage: deploy
  script:
    # Conda configure
    - case "${PACKAGE_VERSION}" in
      *dev*)
        anaconda -t $ANACONDA_TOKEN upload $CI_PROJECT_DIR/conda-bld/linux-64/*.tar.bz2 -u ${CI_PROJECT_NAMESPACE} --label dev --force
      ;;
      *)
        anaconda -t $ANACONDA_TOKEN upload $CI_PROJECT_DIR/conda-bld/linux-64/*.tar.bz2 -u ${CI_PROJECT_NAMESPACE}
      ;;
      esac
  only:
    - master
  except:
    - triggers

deploy:
  <<: *deploy
  dependencies:
    - build
